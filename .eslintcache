[{"C:\\Users\\hewas\\Desktop\\GitRepos\\typescript-redux-toolkit\\src\\index.tsx":"1","C:\\Users\\hewas\\Desktop\\GitRepos\\typescript-redux-toolkit\\src\\App\\index.tsx":"2"},{"size":168,"mtime":1582580562000,"results":"3","hashOfConfig":"4"},{"size":4161,"mtime":1582580562000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"15c0xv1",{"filePath":"9","messages":"10","errorCount":7,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"11"},"C:\\Users\\hewas\\Desktop\\GitRepos\\typescript-redux-toolkit\\src\\index.tsx",[],[],"C:\\Users\\hewas\\Desktop\\GitRepos\\typescript-redux-toolkit\\src\\App\\index.tsx",["12","13","14","15","16","17","18"],"import React, {\n  ChangeEvent,\n  FormEvent,\n  useEffect,\n  useRef,\n  useState\n} from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport { Todo } from \"../type\";\nimport \"./App.css\";\n\nconst todos: Todo[] = [\n  {\n    id: uuid(),\n    desc: \"Learn React\",\n    isComplete: true\n  },\n  {\n    id: uuid(),\n    desc: \"Learn Redux\",\n    isComplete: true\n  },\n  {\n    id: uuid(),\n    desc: \"Learn Redux-ToolKit\",\n    isComplete: false\n  }\n];\n\nconst selectedTodoId = todos[1].id;\nconst editedCount = 0;\n\nconst App = function() {\n  const [newTodoInput, setNewTodoInput] = useState<string>(\"\");\n  const [editTodoInput, setEditTodoInput] = useState<string>(\"\");\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n  const editInput = useRef<HTMLInputElement>(null);\n\n  const selectedTodo =\n    (selectedTodoId && todos.find(todo => todo.id === selectedTodoId)) || null;\n\n  const handleNewInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setNewTodoInput(e.target.value);\n  };\n\n  const handleEditInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setEditTodoInput(e.target.value);\n  };\n\n  const handleCreateNewTodo = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n  };\n\n  const handleSelectTodo = (todoId: string) => (): void => {};\n\n  const handleEdit = (): void => {\n    if (!selectedTodo) return;\n\n    setEditTodoInput(selectedTodo.desc);\n    setIsEditMode(true);\n  };\n\n  useEffect(() => {\n    if (isEditMode) {\n      editInput?.current?.focus();\n    }\n  }, [isEditMode]);\n\n  const handleUpdate = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n  };\n\n  const handleCancelUpdate = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    e.preventDefault();\n    setIsEditMode(false);\n    setEditTodoInput(\"\");\n  };\n\n  const handleToggle = (): void => {\n    if (!selectedTodoId || !selectedTodo) return;\n  };\n\n  const handleDelete = (): void => {\n    if (!selectedTodoId) return;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__counter\">Todos Updated Count: {editedCount}</div>\n      <div className=\"App__header\">\n        <h1>Todo: Redux vs RTK Edition</h1>\n        <form onSubmit={handleCreateNewTodo}>\n          <label htmlFor=\"new-todo\">Add new:</label>\n          <input\n            onChange={handleNewInputChange}\n            id=\"new-todo\"\n            value={newTodoInput}\n          />\n          <button type=\"submit\">Create</button>\n        </form>\n      </div>\n      <div className=\"App__body\">\n        <ul className=\"App__list\">\n          <h2>My Todos:</h2>\n          {todos.map((todo, i) => (\n            <li\n              className={`${todo.isComplete ? \"done\" : \"\"} ${\n                todo.id === selectedTodoId ? \"active\" : \"\"\n              }`}\n              key={todo.id}\n              onClick={handleSelectTodo(todo.id)}\n            >\n              <span className=\"list-number\">{i + 1})</span> {todo.desc}\n            </li>\n          ))}\n        </ul>\n        <div className=\"App_todo-info\">\n          <h2>Selected Todo:</h2>\n          {selectedTodo === null ? (\n            <span className=\"empty-state\">No Todo Selected</span>\n          ) : !isEditMode ? (\n            <>\n              <span\n                className={`todo-desc ${\n                  selectedTodo?.isComplete ? \"done\" : \"\"\n                }`}\n              >\n                {selectedTodo.desc}\n              </span>\n              <div className=\"todo-actions\">\n                <button onClick={handleEdit}>Edit</button>\n                <button onClick={handleToggle}>Toggle</button>\n                <button onClick={handleDelete}>Delete</button>\n              </div>\n            </>\n          ) : (\n            <form onSubmit={handleUpdate}>\n              <label htmlFor=\"edit-todo\">Edit:</label>\n              <input\n                ref={editInput}\n                onChange={handleEditInputChange}\n                value={editTodoInput}\n              />\n              <button type=\"submit\">Update</button>\n              <button onClick={handleCancelUpdate}>Cancel</button>\n            </form>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"19","severity":2,"message":"20","line":6,"column":11,"nodeType":null,"endLine":6,"endColumn":11,"fix":"21"},{"ruleId":"19","severity":2,"message":"20","line":16,"column":21,"nodeType":null,"endLine":16,"endColumn":21,"fix":"22"},{"ruleId":"19","severity":2,"message":"20","line":21,"column":21,"nodeType":null,"endLine":21,"endColumn":21,"fix":"23"},{"ruleId":"19","severity":2,"message":"20","line":26,"column":22,"nodeType":null,"endLine":26,"endColumn":22,"fix":"24"},{"ruleId":"19","severity":2,"message":"20","line":27,"column":4,"nodeType":null,"endLine":27,"endColumn":4,"fix":"25"},{"ruleId":"19","severity":2,"message":"26","line":33,"column":21,"nodeType":null,"endLine":33,"endColumn":21,"fix":"27"},{"ruleId":"19","severity":2,"message":"28","line":40,"column":35,"nodeType":null,"endLine":40,"endColumn":74,"fix":"29"},"prettier/prettier","Insert `,`",{"range":"30","text":"31"},{"range":"32","text":"31"},{"range":"33","text":"31"},{"range":"34","text":"31"},{"range":"35","text":"31"},"Insert `·`",{"range":"36","text":"37"},"Replace `todo·=>·todo.id·===·selectedTodoId))·||` with `(todo)·=>·todo.id·===·selectedTodoId))·||⏎···`",{"range":"38","text":"39"},[77,77],",",[271,271],[342,342],[422,422],[426,426],[511,511]," ",[820,859],"(todo) => todo.id === selectedTodoId)) ||\n   "]